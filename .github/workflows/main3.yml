name: Run Katalon iOS Tests with Appium

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

jobs:
  run-ios-tests:
    runs-on: macos-latest  # macOS runner for iOS testing

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Java for Katalon Studio (using Zulu distribution)
      - name: Set up Java (Zulu)
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Specify the Java version needed for Katalon Studio
          distribution: 'zulu'  # Use Zulu OpenJDK distribution

      # Step 3: Run Katalon Studio tests directly using Katalon GitHub Action
      - name: Run Katalon Studio tests with Katalon GitHub Action
        uses: katalon-studio/katalon-studio-github-action@v2
        with:
          version: '10.0.1'  # Specify the version of Katalon Studio (adjust this if needed)
          projectPath: '${{ github.workspace }}/QAutomation'  # Path to your Katalon project (use this path relative to the workspace)
          args: '-noSplash -retry=0 \
                 -testSuitePath="Test Suites/YourTestSuite" \  # Replace with your actual test suite path
                 -apiKey=${{ secrets.API_KEY }} \
                 --config -mobileDevice=true \
                 -appium:platformName="iOS" \
                 -appium:platformVersion="18.0.1" \
                 -appium:deviceName="iPad" \
                 -appium:bundleId="my.com.etiqa.ease.dev" \
                 -appium:automationName="XCUITest" \
                 -appium:udid="00008020-00180924262A402E"'

      # Step 4: List Files in QAutomation Directory (Verify the file structure)
      - name: List QAutomation Directory
        run: |
          echo "Listing contents of QAutomation directory..."
          ls -al ${{ github.workspace }}  # List the contents of the root directory to ensure structure
          ls -al ${{ github.workspace }}/QAutomation  # List the contents of the QAutomation directory to verify structure

      # Step 5: List Files in Reports Directory (Verify if reports are being created)
      - name: List Reports Directory
        run: |
          echo "Listing contents of Reports directory..."
          ls -al ${{ github.workspace }}/QAutomation/Reports  # Correctly reference the Reports directory

      # Step 6: Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: katalon-ios-test-results
          path: ${{ github.workspace }}/QAutomation/Reports  # Correct path to Reports folder
